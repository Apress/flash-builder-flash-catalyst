<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   minWidth="1024" minHeight="768"
			   creationComplete="initApp()">
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" paddingTop="20"/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import com.domain.project.valueObjects.PersonDTO;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			[Bindable]
			private var _personsList:ArrayCollection;
			
			[Bindable]
			private var selectedPerson:PersonDTO = null;

			/**
			 * This method initializes the application by calling the
			 * fetch method for the first time.
			 */
			private function initApp():void {
				fetchHandler.token = personServices.getAllPersons();
			}
			
			/**
			 * @param FaultEvent The event that is returned by the service
			 * 
			 * This is just a general fault handler
			 */
			protected function personServices_faultHandler(event:FaultEvent):void {
				Alert.show(event.fault.faultString, event.fault.faultCode);
			}

			/**
			 * @param MouseEvent The event that triggered the action
			 * 
			 * When creating a new item, we just add the item to the grid
			 * and select it for the detail view.
			 */
			protected function btnNew_clickHandler(event:MouseEvent):void {
				selectedPerson = new PersonDTO();
				grid.selectedIndex = -1;
				fname.setFocus();
			}
			
			/**
			 * @param MouseEvent The event that triggered the action
			 * 
			 * When deleting an item, we just remove the item from the grid
			 * and reset the selected person.
			 */
			protected function btnDelete_clickHandler(event:MouseEvent):void {
				CUDHandler.token = personServices.deletePerson(grid.selectedItem);
			}

			/**
			 * @param MouseEvent The event that triggered the action
			 * 
			 * When deleting an item, we just remove the item from the grid
			 * and reset the selected person.
			 */
			protected function btnSave_clickHandler(event:MouseEvent):void
			{
				if(selectedPerson.id == 0) {
					CUDHandler.token = personServices.createPerson(selectedPerson);
				} else {
					CUDHandler.token = personServices.updatePerson(selectedPerson);
				}
			}

			/**
			 * @param ResultEvent The event that is sent by the Flex framework
			 * 
			 * This method reacts to a successful insert, update or delete operation.
			 */
			protected function CUDResultHandler(event:ResultEvent):void {
				fetchHandler.token = personServices.getAllPersons();
				selectedPerson = null;
			}
			
			/**
			 * @param ResultEvent The event that is returned by the service
			 * 
			 * This method captures the fecthing of the database records
			 */
			protected function fetchResultHandler(event:ResultEvent):void {
				_personsList = event.result as ArrayCollection;
			}
			

			protected function grid_changeHandler(event:ListEvent):void
			{
				selectedPerson = (grid.selectedItem as PersonDTO).clone();
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="CUDHandler" result="CUDResultHandler(event)"/>
		<s:CallResponder id="fetchHandler" result="fetchResultHandler(event)"/>
		<s:RemoteObject id="personServices" destination="personServices" 
						fault="personServices_faultHandler(event)"
						showBusyCursor="true"/>
	</fx:Declarations>
	
	<mx:DataGrid id="grid" x="10" y="10" dataProvider="{_personsList}"
				 change="grid_changeHandler(event)">
		<mx:columns>
			<mx:DataGridColumn headerText="ID" dataField="id" width="30"/>
			<mx:DataGridColumn headerText="First name" dataField="firstname" width="100"/>
			<mx:DataGridColumn headerText="Last name" dataField="lastname" width="100"/>
			<mx:DataGridColumn headerText="Phone" dataField="phone" width="100"/>
			<mx:DataGridColumn headerText="Email" dataField="email" width="200"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:Form enabled="{selectedPerson != null}">
		<mx:FormItem label="First name">
			<s:TextInput id="fname" width="200" text="@{selectedPerson.firstname}"/>
		</mx:FormItem>
		<mx:FormItem label="Last name">
			<s:TextInput id="lname" width="200" text="@{selectedPerson.lastname}"/>
		</mx:FormItem>
		<mx:FormItem label="Phone">
			<s:TextInput id="phone" width="200" text="@{selectedPerson.phone}"/>
		</mx:FormItem>
		<mx:FormItem label="Email">
			<s:TextInput id="email" width="200" text="@{selectedPerson.email}"/>
		</mx:FormItem>
	</mx:Form>
	<mx:HBox>
		<s:Button id="btnNew" label="New"
				  click="btnNew_clickHandler(event)"/>
		<s:Button id="btnDelete" label="Delete"
				  click="btnDelete_clickHandler(event)"
				  enabled="{grid.selectedIndex > -1}"/>
		<s:Button id="btnSave" label="Save"
				  enabled="{selectedPerson != null}"
				  click="btnSave_clickHandler(event)"/>
		<s:Button id="btnCancel" label="Cancel"
				  enabled="{selectedPerson != null}"
				  click="grid_changeHandler(null)"/>
	</mx:HBox>
</s:Application>
